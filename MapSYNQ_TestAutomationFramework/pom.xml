<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.cucumber.tests</groupId>
	<version>0.0.1-SNAPSHOT</version>
	<artifactId>MapSYNQ_TestAutomationFramework</artifactId>
	<packaging>jar</packaging>


	<!-- Global Properties -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jdk.version>1.8</jdk.version>
		<junit.version>4.13-beta-3</junit.version>
		<ignoreSnapshots>true</ignoreSnapshots>
		<spring.version>4.2.4.RELEASE</spring.version>
		<cucumber.version>1.2.5</cucumber.version>
		<maven.test.failure.ignore>true</maven.test.failure.ignore>
		<seleniumjava.version>3.141.59</seleniumjava.version>
		<extentReports.version>1.1.1</extentReports.version>
	</properties>

	<!-- end of Global Properties -->
	
	<dependencies>
		<!-- https://mvnrepository.com/artifact/info.cukes/cucumber-java -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>1.2.6</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/info.cukes/cucumber-jvm -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-jvm</artifactId>
			<version>1.2.5</version>
			<type>pom</type>
		</dependency>

		<!-- https://mvnrepository.com/artifact/info.cukes/cucumber-junit -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>1.2.6</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/info.cukes/cucumber-jvm-deps -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-jvm-deps</artifactId>
			<version>1.0.5</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/net.masterthought/cucumber-reporting -->
		<dependency>
			<groupId>net.masterthought</groupId>
			<artifactId>cucumber-reporting</artifactId>
			<version>4.9.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/info.cukes/gherkin -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>gherkin</artifactId>
			<version>2.12.2</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${seleniumjava.version}</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.apache.maven/maven-plugin-api -->
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>3.6.1</version>
		</dependency>

		<!-- cucumber spring -->
		<!-- https://mvnrepository.com/artifact/info.cukes/cucumber-spring -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-spring</artifactId>
			<version>1.2.6</version>
			<type>pom</type>
			<scope>test</scope>
		</dependency>


		<!-- end of test dependencies -->
		<!-- https://mvnrepository.com/artifact/commons-lang/commons-lang -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.2</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.springframework/spring-beans -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>3.0.5.RELEASE</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/io.appium/java-client -->
		<dependency>
			<groupId>io.appium</groupId>
			<artifactId>java-client</artifactId>
			<version>6.1.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-api -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-api</artifactId>
			<version>3.141.59</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/info.cukes/cucumber-core -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-core</artifactId>
			<version>1.2.6</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.vimalselvam</groupId>
			<artifactId>cucumber-extentsreport</artifactId>
			<version>${extentReports.version}</version>
		</dependency>

		<!-- test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- end of test dependencies -->
		

		<!-- https://mvnrepository.com/artifact/com.vimalselvam/cucumber-extentsreport -->
		<dependency>
			<groupId>com.vimalselvam</groupId>
			<artifactId>cucumber-extentsreport</artifactId>
			<version>1.1.0</version>
		</dependency>
		
	</dependencies>
		<!-- end of dependencies -->

	<repositories>
		<repository>              
			<id>central</id>
			<name>Central</name>
			<url>https://repo1.maven.org/maven2</url>
		</repository>
	</repositories>

	<!-- Profiles -->
	<profiles>
		<!-- Local or Primary environment -->
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<build.profile.id>local</build.profile.id>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>

		<!-- Full Tests -->
		<profile>
			<id>full-test</id>
			<properties>
				<build.profile.id>full-test</build.profile.id>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>

		<profile>
			<id>qa00</id>
			<properties>
				<build.profile.id>qa00</build.profile.id>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>

		<profile>
			<id>qa01</id>
			<properties>
				<build.profile.id>qa01</build.profile.id>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>
		<profile>
			<id>production</id>
			<properties>
				<build.profile.id>production</build.profile.id>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>

		<profile>
			<id>stage</id>
			<properties>
				<build.profile.id>stage</build.profile.id>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>
	</profiles>
	<!-- end of profiles -->

	<!-- build options -->
	<build>
		<!-- filters to apply based on profile properties -->
		<filters>
			<!-- Ensures that the config.properties file is always loaded from the 
				configuration directory of the active Maven profile. -->
			<filter>profiles/${build.profile.id}.properties</filter>
		</filters>

		<!-- Placeholders that are found from the files located in the configured 
			resource directories are replaced with the property values found from the 
			profile specific configuration file. -->
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<!-- end of filters -->

		<!-- Plugin Management -->
		<pluginManagement>
			<plugins>
				<!-- compiler plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<fork>true</fork>
						<source>${jdk.version}</source>
						<target>${jdk.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<!-- end of compiler plugin -->
				
				<!-- load properties for pom.xml -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>1.0-alpha-2</version>
					<executions>
						<execution>
							<phase>initialize</phase>
							<goals>
								<goal>read-project-properties</goal>
							</goals>
							<configuration>
								<files>
									<file>profiles/${build.profile.id}.properties</file>
								</files>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- end of load properties for pom.xml -->

				<!-- Test Execution Configurations -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>2.19.1</version>
					<configuration>
						<!-- Build, even if tests fail -->
						<testFailureIgnore>true</testFailureIgnore>
					</configuration>
				</plugin>
				<!-- end of Tests Configurations -->
			</plugins>
		</pluginManagement>
		<!-- end of Plugin Management -->

		<!-- plugins -->
		<plugins>
			<!-- Release -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<tagNameFormat>@{project.artifactId}-@{project.version}</tagNameFormat>
					<autoVersionSubmodules>true</autoVersionSubmodules>

					<!-- Define here what profile you want to validate release -->
					<releaseProfiles>full-test</releaseProfiles>

					<!-- Define here what goals you want to prepare your release -->
					<preparationGoals>clean install</preparationGoals>
				</configuration>
			</plugin>
			<!-- end of release -->

			<!-- begin of maven site -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
				<configuration>
					<source>${jdk.version}</source>
					<additionalparam>-Xdoclint:none</additionalparam>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.4</version>
				<configuration>
					<!-- Build, even if tests fail -->
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.wagon</groupId>
						<artifactId>wagon-webdav-jackrabbit</artifactId>
						<version>2.9</version>
					</dependency>
				</dependencies>
			</plugin>
			<!-- end of maven site -->
		</plugins>
		<!-- end of plugins -->
	</build>
	<!-- end of build options -->

	<!-- reporting -->
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<testFailureIgnore>true</testFailureIgnore>
					<parallel>classes</parallel>
					<forkMode>perthread</forkMode>
					<threadCount>2</threadCount>
					<includes>
					   <include>**/*TR.class</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<!-- Build, even if tests fail -->
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<tags>
						<tag>FIXME</tag>
						<tag>@fixme</tag>
						<tag>@deprecated</tag>
					</tags>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.2</version>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>2.0-beta-2</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.1</version>
				<configuration>
					<!-- Enables analysis which takes more memory but finds more bugs. If 
						you run out of memory, changes the value of the effort element to 'Low'. -->
					<effort>Max</effort>
					<!-- Build doesn't fail if problems are found -->
					<failOnError>false</failOnError>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	<!-- end of reporting -->
</project>
